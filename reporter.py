import base64
exec(base64.b64decode("""aW1wb3J0IG9zCmltcG9ydCBwbGF0Zm9ybQppbXBvcnQgYXN5bmNpbwppbXBvcnQgdGltZQpmcm9tIHB5cm9ncmFtIGltcG9ydCBDbGllbnQKZnJvbSBweXJvZ3JhbS5lcnJvcnMgaW1wb3J0IEZsb29kV2FpdApmcm9tIHByZXR0eXRhYmxlIGltcG9ydCBQcmV0dHlUYWJsZQpmcm9tIHB5cm9ncmFtIGltcG9ydCByYXcKCiMg2LHZhtqv4oCM2YfYpwpyZCwgZ24sIGxnbiwgeXcsIGxyZCwgYmUsIHBlID0gJ1wwMzNbMDA7MzFtJywgJ1wwMzNbMDA7MzJtJywgJ1wwMzNbMDE7MzJtJywgJ1wwMzNbMDE7MzNtJywgJ1wwMzNbMDE7MzFtJywgJ1wwMzNbOTRtJywgJ1wwMzNbMDE7MzVtJwpjbiwgaywgZyA9ICdcMDMzWzAwOzM2bScsICdcMDMzWzkwbScsICdcMDMzWzM4OzU7MTMwbScKCmRlZiBjbGVhcigpOgogICAgb3Muc3lzdGVtKCJjbHMiIGlmIHBsYXRmb3JtLnN5c3RlbSgpID09ICJXaW5kb3dzIiBlbHNlICJjbGVhciIpCgpkZWYgcHJpbnRfYmFubmVyKCk6CiAgICBwcmludChmIiIie2d9CiBfX19fX19fICAgICAgICAgICAgICAgX18gICAgIAp8ICAgICAgIFxcICAgICAgICAgICAgIHwgIFxcICAgIAp8ICQkJCQkJCRcXCAgX19fX19fICAgX3wgJCRfICAgCnwgJCRfX3wgJCQgLyAgICAgIFxcIHwgICAkJCBcXCAgCnwgJCQgICAgJCR8ICAkJCQkJCRcXCBcXCQkJCQkJCAgCnwgJCQkJCQkJFxcfCAkJCAgfCAkJCAgfCAkJCBfXyAKfCAkJCAgfCAkJHwgJCRfXy8gJCQgIHwgJCR8ICBcXCAKfCAkJCAgfCAkJHwgJCQgICAgJCQgIHwgJCR8ICBcXCAKfCAkJCAgfCAkJHwgJCQkJCQkJCAgfCAkJCAgJCQKIFxcJCQgICBcXCQkfCAkJCQkJCQkICB8ICQkICAkJAogICAgICAgICAgfCAkJCAgICAgICAgICAgICAgICAKICAgICAgICAgIHwgJCQgICAgICAgICAgICAgICAgCiAgICAgICAgICAgXFwkJCAgICAgICAgICAgICAgICAKIiIiKQoKZGVmIHByaW50X3N5c3RlbV9pbmZvKCk6CiAgICBwcmludChmIlxue2NufVN5c3RlbSBJbmZvcm1hdGlvbjoiKQogICAgcHJpbnQoZiJQbGF0Zm9ybToge3JkfSB7cGxhdGZvcm0uc3lzdGVtKCl9IikKICAgIHByaW50KGYiUGxhdGZvcm0gUmVsZWFzZToge3JkfSB7cGxhdGZvcm0ucmVsZWFzZSgpfSIpCiAgICBwcmludChmIlBsYXRmb3JtIFZlcnNpb246IHtyZH0ge3BsYXRmb3JtLnZlcnNpb24oKX0iKQogICAgcHJpbnQoZiJNYWNoaW5lOiB7cmR9IHtwbGF0Zm9ybS5tYWNoaW5lKCl9IikKICAgIHByaW50KGYiUHJvY2Vzc29yOiB7cmR9IHtwbGF0Zm9ybS5wcm9jZXNzb3IoKX0iKQogICAgcHJpbnQoZiJQeXRob24gVmVyc2lvbjoge3JkfSB7cGxhdGZvcm0ucHl0aG9uX3ZlcnNpb24oKX0iKQoKY2xhc3MgVGVsZWdyYW1SZXBvcnRlcjoKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzZWxmLmFwaV9pZCA9IGlucHV0KGYie2xyZH1be2xnbn0re2xyZH1dIHtnbn1FbnRlciBBcGkgSUQgYWNjb3VudDoge2d9ICIpCiAgICAgICAgc2VsZi5hcGlfaGFzaCA9IGlucHV0KGYie2xyZH1be2xnbn0re2xyZH1dIHtnbn1FbnRlciBBcGkgaGFzaCBhY2NvdW50OiB7Z30gIikKICAgICAgICBzZWxmLnBob25lX251bWJlciA9IGlucHV0KGYie2xyZH1be2xnbn0re2xyZH1dIHtnbn1FbnRlciBwaG9uZSBhY2NvdW50OiB7Z30gIikKICAgICAgICBzZWxmLmNsaWVudCA9IENsaWVudCgncmVwJywgYXBpX2lkPXNlbGYuYXBpX2lkLCBhcGlfaGFzaD1zZWxmLmFwaV9oYXNoKQogICAgICAgIHNlbGYuaXNfY29ubmVjdGVkID0gRmFsc2UKICAgICAgICBjbGVhcigpCiAgICAgICAgcHJpbnRfYmFubmVyKCkKICAgICAgICBzZWxmLm1ldGhvZHMgPSB7CiAgICAgICAgICAgICIxIjogKCJSZXBvcnQgU3BhbSIsICJzcGFtIiksCiAgICAgICAgICAgICIyIjogKCJSZXBvcnQgT3RoZXIiLCAib3RoZXIiKSwKICAgICAgICAgICAgIjMiOiAoIlJlcG9ydCBWaW9sZW5jZSIsICJ2aW9sZW5jZSIpLAogICAgICAgICAgICAiNCI6ICgiUmVwb3J0IFBvcm5vZ3JhcGh5IiwgInBvcm5vZ3JhcGh5IiksCiAgICAgICAgICAgICI1IjogKCJSZXBvcnQgQ29weXJpZ2h0IiwgImNvcHlyaWdodCIpLAogICAgICAgICAgICAiNiI6ICgiUmVwb3J0IEZha2UiLCAiZmFrZSIpLAogICAgICAgICAgICAiNyI6ICgiUmVwb3J0IEdlbyBJcnJlbGV2YW50IiwgImdlb19pcnJlbGV2YW50IiksCiAgICAgICAgICAgICI4IjogKCJSZXBvcnQgSWxsZWdhbCBEcnVncyIsICJpbGxlZ2FsX2RydWdzIiksCiAgICAgICAgICAgICI5IjogKCJSZXBvcnQgUGVyc29uYWwgRGV0YWlscyIsICJwZXJzb25hbF9kZXRhaWxzIikKICAgICAgICB9CiAgICAgICAgc2VsZi5wcmludF9tZXRob2RzKCkKCiAgICBkZWYgcHJpbnRfbWV0aG9kcyhzZWxmKToKICAgICAgICAjINm+2LHbjNmG2Kog2LHZiNi04oCM2YfYp9uMINmF2YjYrNmI2K8KICAgICAgICB0ID0gUHJldHR5VGFibGUoW2Yne2NufU51bWJlcntscmR9JywgZid7Y259TWV0aG9ke2xyZH0nXSkKICAgICAgICBmb3IgbnVtYmVyLCAobWV0aG9kX25hbWUsIF8pIGluIHNlbGYubWV0aG9kcy5pdGVtcygpOgogICAgICAgICAgICB0LmFkZF9yb3coW2Yne2xnbn17bnVtYmVyfXtscmR9JywgZid7Z259e21ldGhvZF9uYW1lfXtscmR9J10pCiAgICAgICAgcHJpbnQodCkKICAgICAgICBzZWxmLm1ldGhvZCA9IGlucHV0KGYie2xyZH1be2xnbn0/e2xyZH1dIHtnbn1DaG9vc2UgYSBtZXRob2QgKDEtOSk6IHtrfSAiKQoKICAgIGFzeW5jIGRlZiBzdGFydChzZWxmKToKICAgICAgICBhd2FpdCBzZWxmLmNsaWVudC5zdGFydCgpCiAgICAgICAgc2VsZi5pc19jb25uZWN0ZWQgPSBUcnVlCgogICAgYXN5bmMgZGVmIHN0b3Aoc2VsZik6CiAgICAgICAgaWYgc2VsZi5pc19jb25uZWN0ZWQ6CiAgICAgICAgICAgIGF3YWl0IHNlbGYuY2xpZW50LnN0b3AoKQogICAgICAgICAgICBzZWxmLmlzX2Nvbm5lY3RlZCA9IEZhbHNlCgogICAgYXN5bmMgZGVmIHJlcG9ydF9jaGFubmVsKHNlbGYpOgogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5jaGFubmVsX3VzZXJuYW1lID0gaW5wdXQoZiJ7bHJkfVt7bGdufSt7bHJkfV0ge2dufUVudGVyIHVzZXJuYW1lIG9mIHRoZSBjaGFubmVsOiB7a30gIikKICAgICAgICAgICAgc2VsZi5udW1iZXIgPSBpbnQoaW5wdXQoZiJ7bHJkfVt7bGdufSt7bHJkfV0ge2dufU51bWJlciBvZiByZXBvcnRzOiB7a30gIikpCiAgICAgICAgICAgIGNoYW5uZWxfZW50aXR5ID0gYXdhaXQgc2VsZi5jbGllbnQuZ2V0X2NoYXQoc2VsZi5jaGFubmVsX3VzZXJuYW1lKQogICAgICAgICAgICBwcmludChmIkNoYW5uZWwge3NlbGYuY2hhbm5lbF91c2VybmFtZX0gc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZC4iKQoKICAgICAgICAgICAgYXN5bmMgZm9yIG1lc3NhZ2UgaW4gc2VsZi5jbGllbnQuZ2V0X2NoYXRfaGlzdG9yeShjaGFubmVsX2VudGl0eS5pZCwgbGltaXQ9MSk6CiAgICAgICAgICAgICAgICBtZXNzYWdlX2lkID0gbWVzc2FnZS5pZAogICAgICAgICAgICAgICAgcHJpbnQoZiJSZXBvcnRpbmcgdGhlIGxhc3QgbWVzc2FnZSB3aXRoIElEIHttZXNzYWdlX2lkfSBmcm9tIGNoYW5uZWwge3NlbGYuY2hhbm5lbF91c2VybmFtZX0uIikKCiAgICAgICAgICAgICAgICBmb3IgXyBpbiByYW5nZShzZWxmLm51bWJlcik6CiAgICAgICAgICAgICAgICAgICAgYXdhaXQgc2VsZi5yZXBvcnRfbWVzc2FnZShjaGFubmVsX2VudGl0eS5pZCwgbWVzc2FnZV9pZCkKCiAgICAgICAgZXhjZXB0IEZsb29kV2FpdCBhcyBlOgogICAgICAgICAgICBwcmludChmIlRvbyBtYW55IHJlcXVlc3RzLiBQbGVhc2Ugd2FpdCBmb3Ige2UueH0gc2Vjb25kcy4iKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJ7bHJkfUVycm9yOiB7c3RyKGUpfSIpCgogICAgYXN5bmMgZGVmIHJlcG9ydF9tZXNzYWdlKHNlbGYsIHBlZXIsIG1lc3NhZ2VfaWQpOgogICAgICAgIHRyeToKICAgICAgICAgICAgdGV4dCA9IGlucHV0KGYie2dufVRoZSBkZXNpcmVkIG1lc3NhZ2UgdG8gcmVwb3J0OiAiKQogICAgICAgICAgICAjINin2LHYs9in2YQg2K/Ysdiu2YjYp9iz2Kog2KjYsdin24wg2q/Ystin2LHYtAogICAgICAgICAgICBhd2FpdCBzZWxmLmNsaWVudC5pbnZva2UocmF3LmZ1bmN0aW9ucy5tZXNzYWdlcy5SZXBvcnQoCiAgICAgICAgICAgICAgICBwZWVyPXBlZXIsCiAgICAgICAgICAgICAgICBpZD1bbWVzc2FnZV9pZF0sICAjIEVuc3VyZSBtZXNzYWdlX2lkIGlzIHdyYXBwZWQgaW4gYSBsaXN0CiAgICAgICAgICAgICAgICByZWFzb249c2VsZi5tZXRob2RzW3NlbGYubWV0aG9kXVsxXSwgICMgR2V0IHRoZSByZWFzb24gZnJvbSB0aGUgbWV0aG9kcyBkaWN0aW9uYXJ5CiAgICAgICAgICAgICAgICBtZXNzYWdlPXRleHQgICMgQ3VzdG9tIG1lc3NhZ2UgZm9yIHJlcG9ydAogICAgICAgICAgICApKQogICAgICAgICAgICBwcmludChmIk1lc3NhZ2UgSUQge21lc3NhZ2VfaWR9IGZyb20gY2hhbm5lbCByZXBvcnRlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICBleGNlcHQgRmxvb2RXYWl0IGFzIGU6CiAgICAgICAgICAgIHByaW50KGYie3JkfVRvbyBtYW55IHJlcXVlc3RzLiBQbGVhc2Ugd2FpdCBmb3Ige2UueH0gc2Vjb25kcy4iKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgZXJyb3JfbWVzc2FnZSA9IGYiTWVzc2FnZSBJRCB7bWVzc2FnZV9pZH0gZnJvbSBjaGFubmVsIHJlcG9ydGVkIHN1Y2Nlc3NmdWxseS4iCiAgICAgICAgICAgIGVycm9yX2RldGFpbCA9IHN0cihlKQoKICAgICAgICAgICAgcHJpbnQoZXJyb3JfbWVzc2FnZSkKICAgICAgICAgICAgZm9yIGNoYXIgaW4gZXJyb3JfZGV0YWlsOgogICAgICAgICAgICAgICAgcHJpbnQoY2hhciwgZW5kPScnLCBmbHVzaD1UcnVlKQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxNSkgCiAgICAgICAgICAgIHByaW50KCkgCgphc3luYyBkZWYgbWFpbigpOgogICAgY2xlYXIoKQogICAgcHJpbnRfYmFubmVyKCkKICAgIHByaW50X3N5c3RlbV9pbmZvKCkKCiAgICBwYXNzd29yZCA9ICJtb25qaTAyNCIKICAgIHVzZXJfaW5wdXQgPSBpbnB1dChmIntscmR9W3tyZH0qe2xyZH1dIHtrfUVudGVyIHBhc3N3b3JkIDogIikKICAgIGlmIHVzZXJfaW5wdXQgIT0gcGFzc3dvcmQ6CiAgICAgICAgcHJpbnQoZiJ7bHJkfVt7cmR9KntscmR9XSB7a31JbnZhbGlkIHBhc3N3b3JkLiBBY2Nlc3MgZGVuaWVkLiIpCiAgICAgICAgcmV0dXJuCgogICAgcmVwb3J0ZXIgPSBUZWxlZ3JhbVJlcG9ydGVyKCkKICAgIGF3YWl0IHJlcG9ydGVyLnN0YXJ0KCkKICAgIHByaW50KGYie2dufUNvbm5lY3RlZCB0byB0aGUgVGVsZWdyYW0gQVBJISIpCgogICAgd2hpbGUgVHJ1ZToKICAgICAgICBwcmludCgiXG5PcHRpb25zOiIpCiAgICAgICAgcHJpbnQoIjEuIFJlcG9ydCBhIGNoYW5uZWwiKQogICAgICAgIHByaW50KCIyLiBSZXBvcnQgYSBtZXNzYWdlIikKICAgICAgICBwcmludCgiMy4gRXhpdCIpCiAgICAgICAgCiAgICAgICAgb3B0aW9uID0gaW5wdXQoIkVudGVyIHlvdXIgY2hvaWNlOiAiKQoKICAgICAgICBpZiBvcHRpb24gPT0gIjEiOgogICAgICAgICAgICBhd2FpdCByZXBvcnRlci5yZXBvcnRfY2hhbm5lbCgpCiAgICAgICAgZWxpZiBvcHRpb24gPT0gIjIiOgogICAgICAgICAgICBtZXNzYWdlX2lkID0gaW50KGlucHV0KGYie2xyZH17Z259RW50ZXIgbWVzc2FnZSBJRDoge2t9ICIpKQogICAgICAgICAgICBjaGF0X3VzZXJuYW1lID0gaW5wdXQoIkVudGVyIGNoYXQgdXNlcm5hbWU6ICIpCiAgICAgICAgICAgIGNoYXRfZW50aXR5ID0gYXdhaXQgcmVwb3J0ZXIuY2xpZW50LmdldF9jaGF0KGNoYXRfdXNlcm5hbWUpCgogICAgICAgICAgICAjINit2KfZhNinINmB2LHYp9iu2YjYp9mG24wg2KrYp9io2LkgcmVwb3J0X21lc3NhZ2UKICAgICAgICAgICAgYXdhaXQgcmVwb3J0ZXIucmVwb3J0X21lc3NhZ2UoY2hhdF9lbnRpdHkuaWQsIG1lc3NhZ2VfaWQpCiAgICAgICAgZWxpZiBvcHRpb24gPT0gIjMiOgogICAgICAgICAgICBhd2FpdCByZXBvcnRlci5zdG9wKCkKICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChmIntscmR9e2dufUludmFsaWQgY2hvaWNlLiBUcnkgYWdhaW4hIikKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhc3luY2lvLnJ1bihtYWluKCkp"""))
